shiny::runApp()
runApp()
runApp()
podatki <- read.csv(file = "podatki.csv", sep=";", header=TRUE)
starost_regija_nevesta2017 <- read.csv(file="starost_regija_nevesta.csv", sep=";", header = TRUE)
starost_regija_zenin2017 <- read.csv(file="starost_regija_zenin.csv", sep=";", header = TRUE)
#podatki za graf po letih (1954-2017) glede na povprecno starost in stevilo sklenitev zakonskih zvez
#prvi stolpec predstavlja število sklenitev zakonskih zvez, drugi sklnitev zakosnkih zvez na 1000 prebivalcev,
#tretji povprečno starost ženina, četrti povprečno starost neveste
povprecna_starost_leta<- read.csv(file = "povprecna_starost_leta.csv", sep = ";", header = T)
names(povprecna_starost_leta)<-c("leto", "sklenitev_zvez",
"sklenitev_zvez_na1000_prebiv",
"povp_starost_zenina",
"povp_starost_neveste")
ggplot(povprecna_starost_leta, aes(leto, povp_starost_zenina))+
geom_point()
View(podatki)
runApp()
runApp()
runApp()
graf.zemljevid <- ggplot() + geom_polygon(data = zemljevid2, aes(x=long, y=lat, group=group,
fill=X2011),color = "grey30") +
scale_fill_gradient(low="dodgerblue3", high="firebrick3") +
guides(fill = guide_colorbar(title = "Porazdelitev\nštevila porok\npo regijah"))
source("zemljevid.r", encoding = "UTF-8")
# Uvozimo zemljevid.
zemljevid <- uvozi.zemljevid("http://biogeo.ucdavis.edu/data/gadm2.8/shp/SVN_adm_shp.zip",
"SVN_adm1", encoding = "UTF-8")
##rownames(podatki[2:13]) <- vsota$REGIJE
zemljevid1 <- preuredi(podatki, zemljevid, "NAME_1")
pretvori.zemljevid <- function(zemljevid) {
fo <- fortify(zemljevid)
data <- zemljevid@data
data$id <- as.character(0:(nrow(data)-1))
return(inner_join(fo, data, by="id"))
}
# Regije na zemljevidu
zemljevid$X1995 <- zemljevid1$X1995
zemljevid$X1996 <- zemljevid1$X1996
zemljevid$X1997 <- zemljevid1$X1997
zemljevid$X1998 <- zemljevid1$X1998
zemljevid$X1999 <- zemljevid1$X1999
zemljevid$X2000 <- zemljevid1$X2000
zemljevid$X2001 <- zemljevid1$X2001
zemljevid$X2002 <- zemljevid1$X2002
zemljevid$X2004 <- zemljevid1$X2004
zemljevid$X2003 <- zemljevid1$X2003
zemljevid$X2006 <- zemljevid1$X2006
zemljevid$X2005 <- zemljevid1$X2005
zemljevid$X2008 <- zemljevid1$X2008
zemljevid$X2007 <- zemljevid1$X2007
zemljevid$X2009 <- zemljevid1$X2009
zemljevid$X2010 <- zemljevid1$X2010
zemljevid$X2011 <- zemljevid1$X2011
zemljevid$X2012 <- zemljevid1$X2012
zemljevid$X2014 <- zemljevid1$X2014
zemljevid$X2013 <- zemljevid1$X2013
zemljevid$X2015 <- zemljevid1$X2015
zemljevid$X2016 <- zemljevid1$X2016
zemljevid$X2017 <- zemljevid1$X2017
zemljevid2 <- pretvori.zemljevid(zemljevid)
library(dplyr)
zemljevid2 <- pretvori.zemljevid(zemljevid)
graf.zemljevid <- ggplot() + geom_polygon(data = zemljevid2, aes(x=long, y=lat, group=group,
fill=X2011),color = "grey30") +
scale_fill_gradient(low="dodgerblue3", high="firebrick3") +
guides(fill = guide_colorbar(title = "Porazdelitev\nštevila porok\npo regijah"))
print(graf.zemljevid)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
library(ggplot2)
runApp()
graf.zemljevid <- ggplot() + geom_polygon(data = zemljevid2, aes(x=long, y=lat, group=group,
fill=X1995),color = "grey30") +
scale_fill_gradient(low="dodgerblue3", high="firebrick3") +
guides(fill = guide_colorbar(title = "Porazdelitev\nštevila porok\npo regijah"))
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
runApp()
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/tema.R', encoding = 'UTF-8')
runApp()
library(dplyr)
library(ggplot2)
library(RColorBrewer)
runApp()
tema_graf <- function() {
palette <- brewer.pal("Greys", n=9)
color.background = palette[2]
color.grid.major = palette[3]
color.axis.text = palette[9]
color.subtitle=palette[9]
color.title = palette[8]
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(plot.title=element_text(color=color.title, size=13, vjust=1.25, face="bold", hjust = -0.08)) +
theme(plot.subtitle=element_text(color=color.subtitle, size=10, vjust=1.25, hjust = -0.05))+
theme(axis.text.x=element_text(size=10,color=color.axis.text)) +
theme(axis.text.y=element_text(size=10,color=color.axis.text))
}
runApp()
runApp('~/Iskalnik-pesmi/Shiny')
runApp('~/Iskalnik-pesmi/Shiny')
runApp()
runApp()
runApp()
runApp()
runApp()
poroke_po_mesecih<-read.csv("poroke_po_mesecih.csv", sep = ";", header = T)
ggplot(poroke_po_mesecih, aes(mesec, X1988))+geom_point()
source("zemljevid.r", encoding = "UTF-8")
# Uvozimo zemljevid.
zemljevid <- uvozi.zemljevid("http://biogeo.ucdavis.edu/data/gadm2.8/shp/SVN_adm_shp.zip",
"SVN_adm1", encoding = "UTF-8")
##rownames(podatki[2:13]) <- vsota$REGIJE
zemljevid1 <- preuredi(podatki, zemljevid, "NAME_1")
View(zemljevid1)
pretvori.zemljevid <- function(zemljevid) {
fo <- fortify(zemljevid)
data <- zemljevid@data
data$id <- as.character(0:(nrow(data)-1))
return(inner_join(fo, data, by="id"))
}
# Regije na zemljevidu
zemljevid$X1995 <- zemljevid1$X1995
zemljevid$X1996 <- zemljevid1$X1996
zemljevid$X1997 <- zemljevid1$X1997
zemljevid$X1998 <- zemljevid1$X1998
zemljevid$X1999 <- zemljevid1$X1999
zemljevid$X2000 <- zemljevid1$X2000
zemljevid$X2001 <- zemljevid1$X2001
zemljevid$X2002 <- zemljevid1$X2002
zemljevid$X2003 <- zemljevid1$X2003
zemljevid$X2004 <- zemljevid1$X2004
zemljevid$X2005 <- zemljevid1$X2005
zemljevid$X2006 <- zemljevid1$X2006
zemljevid$X2007 <- zemljevid1$X2007
zemljevid$X2008 <- zemljevid1$X2008
zemljevid$X2009 <- zemljevid1$X2009
zemljevid$X2010 <- zemljevid1$X2010
zemljevid$X2011 <- zemljevid1$X2011
zemljevid$X2012 <- zemljevid1$X2012
zemljevid$X2013 <- zemljevid1$X2013
zemljevid$X2014 <- zemljevid1$X2014
zemljevid$X2015 <- zemljevid1$X2015
zemljevid$X2016 <- zemljevid1$X2016
zemljevid$X2017 <- zemljevid1$X2017
zemljevid2 <- pretvori.zemljevid(zemljevid)
graf.zemljevid <- ggplot() + geom_polygon(data = zemljevid2, aes(x=long, y=lat, group=group,
fill=X1995),color = "grey30") +
scale_fill_gradient(low="dodgerblue3", high="firebrick3") +
guides(fill = guide_colorbar(title = "Porazdelitev\nštevila porok\npo regijah"))
graf.zemljevid
zemljevid2
print(graf.zemljevid)
runApp()
runApp()
runApp()
tema_zemljevid <- function() {
palette <- brewer.pal("Greys", n=9)
color.background = palette[6]
color.grid.major = palette[3]
color.axis.text = palette[9]
color.subtitle=palette[9]
color.title = palette[8]
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.background, color=color.background)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color=color.background)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25)) +
theme(panel.grid.minor=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(plot.title=element_text(color=color.title, size=13, vjust=1.25, face="bold", hjust = -0.08)) +
theme(plot.subtitle=element_text(color=color.subtitle, size=10, vjust=1.25, hjust = -0.05))+
theme(axis.text.x=element_blank()) +
theme(axis.text.y=element_blank())
}
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/tema.R')
runApp()
runApp()
poroke_po_mesecih<-read.csv("poroke_po_mesecih.csv", sep = ";", header = T)
View(poroke_po_mesecih)
View(povprecna_starost_leta)
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
View(poroke_evropa)
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
shiny::runApp()
library(dplyr)
library(ggplot2)
library(RColorBrewer)
runApp()
colnames(poroke_evropa)
seznam_drzav<-colnames(poroke_evropa)[2,]
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:]
seznam_drzav<-seznam_drzav[2]
seznam_drzav
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:end]
seznam_drzav<-seznam_drzav[2:5]
seznam_drzav
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:40]
seznam_drzav
View(poroke_evropa)
poroke_evropa[1,:]
poroke_evropa[1,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:40]
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:36]
runApp()
runApp()
seq(3, 12, by=1)
runApp()
View(podatki)
View(poroke_evropa)
View(poroke_po_mesecih)
View(povprecna_starost_leta)
View(poroke_evropa)
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:36]
runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:36]
runApp()
runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:36]
runApp()
runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
colnames(poroke_evropa)["Velika.Britanija"]<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Bosna.in.Hercegovina']<-'Bosna in Hercegovina'
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
names(poroke_evropa)[names(poroke_evropa)=='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Bosna.in.Hercegovina']<-'Bosna in Hercegovina'
seznam_drzav<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav[2:36]
runApp()
locitve_evropa<- read.csv(file = "locitve_evropa.csv", sep=";", header=TRUE)
locitve_evropa<- read.csv(file = "locitve_evropa.csv", sep=";", header=TRUE)
View(locitve_evropa)
names(locitve_evropa)<-seznam_drzav
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
names(poroke_evropa)[names(poroke_evropa)=='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Bosna.in.Hercegovina']<-'Bosna in Hercegovina'
seznam_drzav1<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav1[2:36]
locitve_evropa<- read.csv(file = "locitve_evropa.csv", sep=";", header=TRUE)
names(locitve_evropa)<-seznam_drzav1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
View(poroke_evropa)
poroke_evropa<-poroke_evropa[1:6,]
names(poroke_evropa)[names(poroke_evropa)=='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Bosna.in.Hercegovina']<-'Bosna in Hercegovina'
seznam_drzav1<-colnames(poroke_evropa)
seznam_drzav<-seznam_drzav1[2:36]
locitve_evropa<- read.csv(file = "locitve_evropa.csv", sep=";", header=TRUE)
names(locitve_evropa)<-seznam_drzav1
View(locitve_evropa)
runApp()
runApp()
runApp()
g=ggplot(poroke_evropa, aes_string(x=poroke_evropa$X, y=Slovenija)) + geom_col() +
scale_x_continuous(breaks=seq(1960,2010, by=10),labels=c("1960", "'70","'80","'90","2000","'10"))+
scale_y_continuous(breaks=seq(1,12,by=1),labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
xlab("Leta")
g=ggplot(poroke_evropa, aes_string(x=poroke_evropa$X, y="Slovenija")) + geom_col() +
scale_x_continuous(breaks=seq(1960,2010, by=10),labels=c("1960", "'70","'80","'90","2000","'10"))+
scale_y_continuous(breaks=seq(1,12,by=1),labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
xlab("Leta")
g+geom_col(locitve_evropa, mapping=aes_string(x=locitve_evropa$X, y=Slovenija), colour="red")
g+geom_line(locitve_evropa, mapping=aes_string(x=locitve_evropa$X, y="Slovenija"), colour="red")
g+geom_line(locitve_evropa, mapping=aes_string(x=locitve_evropa$X, y="Slovenija"), colour="red")+geom_point()
g=ggplot(poroke_evropa, aes_string(x=poroke_evropa$X, y="Slovenija")) + geom_col() +
scale_x_continuous(breaks=seq(1960,2010, by=10),labels=c("1960", "'70","'80","'90","2000","'10"))+
scale_y_continuous(breaks=seq(1,12,by=1),labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
xlab("Leta")
g+geom_point(locitve_evropa, mapping=aes_string(x=locitve_evropa$X, y="Slovenija"), colour="red")+
geom_line(locitve_evropa, mapping=aes_string(x=locitve_evropa$X, y="Slovenija"), colour="red")
runApp()
runApp()
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/libraries.R')
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
shiny::runApp()
# poroke v Evropi
poroke_evropa<- read.csv(file = "poroke_evropa.csv", sep=";", header=TRUE)
poroke_evropa<-poroke_evropa[1:6,]
names(poroke_evropa)[names(poroke_evropa)=='Velika.Britanija']<-'Velika Britanija'
names(poroke_evropa)[names(poroke_evropa)=='Bosna.in.Hercegovina']<-'Bosna in Hercegovina'
names(poroke_evropa)
poroke_evropa[:,Slovenija]
poroke_evropa[,Slovenija]
View(poroke_evropa)
poroke_evropa[,"Slovenija"]
poroke_evropa[,"Velika Britanija"]
runApp()
runApp()
runApp()
View(zemljevid2)
View(zemljevid2)
View(podatki)
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/libraries.R')
shiny::runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
runApp()
View(locitve_evropa)
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
runApp()
rnorm(10, 30, 4)
View(starost_regija_nevesta2017)
View(povprecna_starost_leta)
#priprava podatkov  za kalkulator
#ženske, 1.poroka
x1<-rnorm(12, 29, 3)
x2<-rnorm(12, 28, 3)
x3<-rnorm(12, 30, 4)
x4<-rnorm(12, 30.5, 3)
x5<-rnorm(12, 28, 3)
x6<-rnorm(12, 30, 4)
x7<-rnorm(12, 30, 3)
x8<-rnorm(12, 31, 3)
x9<-rnorm(12, 30, 5)
x10<-rnorm(12, 30, 3)
x11<-rnorm(12, 29, 2)
x12<-rnorm(12, 29, 3)
zenske_poroka1<-data.frame(x1,x2,x3)
View(zenske_poroka1)
#priprava podatkov  za kalkulator
regije<-c("Pomurska", "Podravska", "Koroska", "Savinjska", "Zasavska", "Posavska",
"Jugovzhodna Slovenija", "Osrednjeslovenska", "Gorenjska", "Primorsko-notranjska",
"Goriška", "Obalno-kraska")
#ženske, 1.poroka
x1<-rnorm(12, 29, 3)
x2<-rnorm(12, 28, 3)
x3<-rnorm(12, 30, 4)
x4<-rnorm(12, 30.5, 3)
x5<-rnorm(12, 28, 3)
x6<-rnorm(12, 30, 4)
x7<-rnorm(12, 30, 3)
x8<-rnorm(12, 31, 3)
x9<-rnorm(12, 30, 5)
x10<-rnorm(12, 30, 3)
x11<-rnorm(12, 29, 2)
x12<-rnorm(12, 29, 3)
zenske_poroka1<-data.frame(regije,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12)
#moški, 1.poroka
y1<-round(rnorm(12, 30, 2))
y1
#ženske, 1.poroka
x1<-round(rnorm(12, 29, 3))
x2<-round(rnorm(12, 28, 3))
x3<-round(rnorm(12, 30, 4))
x4<-round(rnorm(12, 30.5, 3))
x5<-round(rnorm(12, 28, 3))
x6<-round(rnorm(12, 30, 4))
x7<-round(rnorm(12, 30, 3))
x8<-round(rnorm(12, 31, 3))
x9<-round(rnorm(12, 30, 5))
x10<-round(rnorm(12, 30, 3))
x11<-round(rnorm(12, 29, 2))
x12<-round(rnorm(12, 29, 3))
zenske_poroka1<-data.frame(regije,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12)
names(zenske_poroka1)<-regije
View(zenske_poroka1)
#moški, 1.poroka
y1<-round(rnorm(12, 30, 2))
y2<-round(rnorm(12, 29, 3))
y3<-round(rnorm(12, 31, 2))
y4<-round(rnorm(12, 32, 3))
y5<-round(rnorm(12, 30, 2))
y6<-round(rnorm(12, 29, 4))
y7<-round(rnorm(12, 31, 1))
y8<-round(rnorm(12, 32, 3))
y9<-round(rnorm(12, 30, 1))
y10<-round(rnorm(12, 32, 1))
y11<-round(rnorm(12, 30, 3))
y12<-round(rnorm(12, 29, 2))
moski_poroka1<-data.frame(regije, y1,y2,y3,y4,y5,y6,y7,y8,y9,y10,y11,y12)
names(moski_poroka1)<-regije
runApp()
zenske_poroka1["Osrednjeslovenska", "Osrednjeslovenska"]
View(zenske_poroka1)
zenske_poroka1["Zasavska", "Zasavska"]
zenske_poroka1[2, "Zasavska"]
names
names(zenske_poroka1)<-c("regije",regije)
which(zenske_poroka1$regije="Zasavska")
which(zenske_poroka1$regije=="Zasavska")
runApp()
source('C:/Users/TEMP/Desktop/magisterij/Napredni pristopi v R/NapredniR/uvoz.R', encoding = 'UTF-8')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
